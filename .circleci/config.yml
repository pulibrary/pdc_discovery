---
version: 2.1

orbs:
  browser-tools: circleci/browser-tools@1.4.4
  coveralls: coveralls/coveralls@2.2.1

executors:
  pdc_discovery_executor_build:
    docker:
      - image: cimg/ruby:3.3.2-browsers
        environment: &docker_env_default
          BUNDLER_VERSION: 2.3.11
          BUNDLE_JOBS: 3
          BUNDLE_RETRY: 3
          BUNDLE_PATH: vendor/bundle
          RAILS_ENV: test
    working_directory: ~/pdc_discovery

  pdc_discovery_executor:
    docker:
      - image: cimg/ruby:3.3.2-browsers
        environment:
          <<: *docker_env_default
          DB_HOST: localhost
          APP_DB_USERNAME: pdc_discovery
          DB_PASSWORD: ""
          APP_DB: pdc_discovery_test
          SOLR_URL: http://solr:SolrRocks@localhost:8983/solr/pdc_discovery-core-test
      - image: zookeeper:3.4
      - image: postgres:15-alpine
        environment:
          POSTGRES_USER: pdc_discovery
          POSTGRES_DB: pdc_discovery_test
          # POSTGRES_PASSWORD: ""
          POSTGRES_HOST_AUTH_METHOD: trust
      - image: solr:8.4
        command:
          - "sh"
          - "-c"
          - wget -O /tmp/security.json "https://gist.githubusercontent.com/eliotjordan/a27be341dc2e7a532bad99203e0f55b7/raw/5866efab9242f953764c1b03d17763309e22948f/security.json" && server/scripts/cloud-scripts/zkcli.sh -zkhost localhost:2181 -cmd putfile /security.json /tmp/security.json && bin/solr -cloud -noprompt -f -p 8983 -z localhost:2181
    working_directory: ~/pdc_discovery

commands:
  bundle_install:
    description: "Install correct version of bundler and load from cache or bundle install"
    steps:
      # Restore bundle cache
      - restore_cache:
          keys:
            - pdc_discovery-{{ checksum "Gemfile.lock" }}-{{ checksum "yarn.lock" }}
      - run:
          name: Update bundler
          command: |
            echo 'export BUNDLER_VERSION=2.3.11' >> $BASH_ENV
            gem install bundler -v 2.3.11
      - run:
          name: Install dependencies
          command: bundle check --path=vendor/bundle || bundle install --path=vendor/bundle --jobs 4 --retry 3
      - save_cache:
          key: pdc_discovery-{{ checksum "Gemfile.lock" }}-{{ checksum "yarn.lock" }}
          paths:
            - ./vendor/bundle
  yarn_install:
    description: "Install the supported release of Yarn and install the package dependencies"
    steps:
      - restore_cache:
          name: Restore the Yarn package dependencies from the cache
          keys:
            - pdc_discovery-yarn-{{ checksum "yarn.lock" }}
      - run:
          name: Install NPM Dependencies via Yarn
          command: yarn install --frozen-lockfile
      - save_cache:
          name: Save Yarn Package Cache
          key: pdc_discovery-yarn-{{ checksum "yarn.lock" }}
          paths:
            - ~/.cache/yarn

jobs:
  build:
    executor: pdc_discovery_executor_build
    steps:
      - attach_workspace:
          at: '~/pdc_discovery'
      - checkout
      - run:
          name: Check current version of node
          command: node -v
      - run:
          name: Set Timezone to EST/EDT
          command: echo 'America/New_York' = /etc/timezone
      - run: sudo apt update && sudo apt install postgresql-client
      - bundle_install
      - yarn_install
      - persist_to_workspace:
          root: '~/pdc_discovery'
          paths: '*'

  rubocop:
    executor: pdc_discovery_executor_build
    steps:
      - attach_workspace:
          at: '~/pdc_discovery'
      - bundle_install
      # Lint
      - run:
          name: Run rubocop
          command: bundle exec rubocop

  # Lint the JavaScript, CSS, Sass, and Vue source code files
  eslint:
    executor: pdc_discovery_executor_build
    steps:
      - attach_workspace:
          at: '~/pdc_discovery'
      - yarn_install
      - run:
          name: Run ESLint with Prettier for linting
          command: yarn run lint

  test:
    executor: pdc_discovery_executor
    steps:
      - attach_workspace:
          at: '~/pdc_discovery'
      # project database settings
      - run:
          name: Wait for PostgreSQL
          command: dockerize -wait tcp://localhost:5432 -timeout 1m
      - run:
          name: Wait for Solr
          command: dockerize -wait tcp://localhost:8983 -timeout 1m
      - run:
          name: Load config into solr
          command: |
            cd solr/conf
            zip -1 -r solr_config.zip ./*
            curl -H "Content-type:application/octet-stream" --data-binary @solr_config.zip "http://solr:SolrRocks@127.0.0.1:8983/solr/admin/configs?action=UPLOAD&name=pdc_discovery"
            curl -H 'Content-type: application/json' http://solr:SolrRocks@127.0.0.1:8983/api/collections/ -d '{create: {name: pdc_discovery-core-test, config: pdc_discovery, numShards: 1}}'
      - bundle_install
      - yarn_install
      - browser-tools/install-firefox
      - run: |
          ruby --version
          node --version
          java --version
      - run: bundle exec rake db:create RAILS_ENV=test
      - run: bundle exec rake db:migrate RAILS_ENV=test
      # Test
      - run:
          name: Run Rspec
          command: bundle exec rspec
      - store_artifacts:
          path:
            ~/pdc_discovery/coverage
      - coveralls/upload

workflows:
  version: 2
  build_accept_deploy:
    jobs:
      - build
      - test:
          requires:
            - build
      - rubocop:
          requires:
            - build
      - eslint:
          requires:
            - build
